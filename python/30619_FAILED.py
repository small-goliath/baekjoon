"""
문제
서강대학교에는 비어 있는 집이 N채 있다. 그래서 서강대학교는 N명의 사람들이 한 사람당 한 채의 집에 입주해 살 수 있도록 배정해 주려고 한다.
서강대학교에서는 입주한 사람들을 위해 특별한 혜택을 제공하는데, 바로 x번 집에 y번 사람이 입주해서 살게 되면 xy만큼의 세금을 감면해 준다는 것이다.

사람들이 집에 배정된 상태는 1부터 N까지의 정수를 하나씩 원소로 가지는 수열 A_1,A_2,...,A_N로 표현되는데, 이는 현재 i번 집에 A_i번 사람이 배정되어 있음을 의미한다.
다음과 같은 쿼리를 해결하는 프로그램을 작성해 보자.

- L R: 초기의 집 배정 상태에서, L번부터 R번까지의 사람들에게 이미 배정된 집들을 학교가 원하는 만큼 서로 교환해 재배정할 수 있을 때,
감면되는 세금의 합이 최대가 되도록 집에 사람들을 새롭게 배정하였을 때의 수열 A를 출력한다.
모든 쿼리는 독립적이다. 즉, 쿼리가 실행된 직후 수열 A는 초기 상태로 복구된다.

입력
첫째 줄에 수열의 길이를 나타내는 정수 N이 주어진다. 
(1 <= N  <= 300)

둘째 줄에 정수로 이루어진 수열 A_1,A_2,...,A_N이 공백으로 구분되어 주어진다.
(1 <= A_i  <= N)

셋째 줄에 쿼리의 개수를 나타내는 정수 M이 주어진다. 
(1 <= M  <= 300)

넷째 줄부터 M개의 줄에 걸쳐 쿼리를 나타내는 두 정수 L,R이 공백으로 구분되어 주어진다. 
(1 <= L  <= R  <= N)

출력
쿼리마다 정답을 한 줄에 하나씩 출력한다.
각 줄에는 쿼리가 끝난 후 수열 A_1,A_2,...,A_N을 공백으로 구분하여 출력한다.
가능한 답이 여러 가지라면, 아무거나 하나 출력한다.


5
1 3 4 2 5
3
2 3
3 5
1 5

1 2 4 3 5
1 3 4 2 5
1 2 3 4 5

초기 배정 상태를 나타내는 수열 A가 [1,3,4,2,5]로 주어진다.
L=2, R=3인 쿼리가 주어진다면, 2번 사람과 3번 사람은 집을 교환해서, 수열 A는 [1,2,4,3,5]가 될 것이다.
L=3, R=5인 쿼리가 주어진다면, 집을 교환하지 않는 것이 최적이므로, 수열 A는 그대로 [1,3,4,2,5]가 될 것이다.


5
5 2 4 3 1
3
2 3
3 5
1 5

5 2 4 3 1
3 2 4 5 1
1 2 3 4 5
"""
import sys

input = sys.stdin.readline

n = int(input())
arr = list(map(int, input().split()))
copy = arr.copy()
query_qty = int(input())
lr = [list(map(int, input().split())) for _ in range(query_qty)]

for nums in lr:
    l,r = nums[0],nums[1]
    if l == r:
        print(*arr)
        continue
    
    ranges = sorted([arr.index(student) for student in range(l, r+1)])
    sorted_values = sorted(arr[i] for i in ranges)

    for idx, val in zip(ranges, sorted_values):
        arr[idx] = val

    print(*arr)
    arr = copy