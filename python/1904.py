"""
문제
지원이에게 2진 수열을 가르쳐 주기 위해, 지원이 아버지는 그에게 타일들을 선물해주셨다. 그리고 이 각각의 타일들은 0 또는 1이 쓰여 있는 낱장의 타일들이다.

어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 0이 쓰여진 낱장의 타일들을 붙여서 한 쌍으로 이루어진 00 타일들을 만들었다.
결국 현재 1 하나만으로 이루어진 타일 또는 0타일을 두 개 붙인 한 쌍의 00타일들만이 남게 되었다.
그러므로 지원이는 타일로 더 이상 크기가 N인 모든 2진 수열을 만들 수 없게 되었다.

예를 들어, N=1일 때 1만 만들 수 있고, N=2일 때는 00, 11을 만들 수 있다. (01, 10은 만들 수 없게 되었다.)
또한 N=4일 때는 0011, 0000, 1001, 1100, 1111 등 총 5개의 2진 수열을 만들 수 있다.

우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다. 단 타일들은 무한히 많은 것으로 가정하자.

입력
첫 번째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 1,000,000)

출력
첫 번째 줄에 지원이가 만들 수 있는 길이가 N인 모든 2진 수열의 개수를 15746으로 나눈 나머지를 출력한다.


4

5


5

8

1 > 1
2 > 2
3 > 3
4 > 5
5 > 8
6 > 13
7 > 21
8 > 34
9 > 55
10 > 89
"""
import sys, math

input = sys.stdin.readline

n = int(input())
def solution(n):
    p, c = 1, 2
    for _ in range(2, n):
        p, c = c, (p + c) % 15746

    return c

# def binary_sequences(n):
#     sqrt_5 = math.sqrt(5)
#     return round((1/sqrt_5) * ((((sqrt_5 + 1)/2) ** (n+1)) - (((-sqrt_5 + 1)/2) ** (n+1)))) % 15746


if n == 1:
    print(1)
elif n == 2:
    print(2)
else:
    print(solution(n))
    # print(binary_sequences(n))