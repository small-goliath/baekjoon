/*
문제
찬우와 건모는 n x m 격자판에서 돌 가져가기 게임을 하기로 했다.
처음에 모든 칸에는 돌이 하나씩 있다.

게임의 규칙은 다음과 같다.

찬우가 먼저 시작하며, 번갈아 가며 턴을 진행한다.
각 턴마다 하나의 열 또는 행을 선택한 뒤, 선택한 열 또는 행에 있는 돌을 모두 가져간다.
자신의 턴에 돌을 하나도 가져가지 못하면 패배한다.
찬우와 건모는 매우 똑똑해서 최적으로 플레이한다고 가정하자.

격자판의 크기 n, m이 주어질 때 찬우가 승리하는지를 판단하는 프로그램을 작성하자.
하나의 입력 데이터에서 T개의 테스트 케이스를 해결해야 한다.

입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다.
(1 <= T <= 100,000) 

둘째 줄부터 T개의 각 줄마다 해당 테스트 케이스에서 격자판의 크기를 나타내는 두 정수 n, m이 공백으로 구분되어 주어진다.
(1 <= n,m <= 10^18) 

출력
각 테스트 케이스마다 찬우가 승리한다면 YES, 아니면 NO를 출력한다.


3
1 2
2 2
1 1

YES
NO
YES
*/
import kotlin.math.abs
fun main() = with(System.`in`.bufferedReader()) {
    val t = readLine().toInt()

    for (i in 0 until t) {
        val (n, m) = readLine().split(" ").map { it.toLong() }
        
        if (n == 1L || m == 1L) println("YES")
        else if (abs(n-m) % 2 == 0L) println("NO")
        else println("YES")
    }
}